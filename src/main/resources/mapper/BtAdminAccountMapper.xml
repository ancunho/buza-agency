<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.buza.agency.repository.BtAdminAccountRepository">
  <resultMap id="BaseResultMap" type="io.buza.agency.entity.BtAdminAccount">
    <id column="seq" jdbcType="BIGINT" property="seq" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="mobile_no" jdbcType="VARCHAR" property="mobileNo" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="thumbnail_url" jdbcType="VARCHAR" property="thumbnailUrl" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="kakao" jdbcType="VARCHAR" property="kakao" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="modified_at" jdbcType="TIMESTAMP" property="modifiedAt" />
    <result column="modified_by" jdbcType="VARCHAR" property="modifiedBy" />
  </resultMap>
  <sql id="Base_Column_List">
    seq, username, `password`, `status`, real_name, role_code, role_name, mobile_no, 
    email, thumbnail_url, wechat, kakao, memo, created_at, created_by, modified_at, modified_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bt_admin_account
    where seq = #{seq,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bt_admin_account
    where seq = #{seq,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.buza.agency.entity.BtAdminAccount">
    insert into bt_admin_account (seq, username, `password`, 
      `status`, real_name, role_code, 
      role_name, mobile_no, email, 
      thumbnail_url, wechat, kakao, 
      memo, created_at, created_by, 
      modified_at, modified_by)
    values (#{seq,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{roleName,jdbcType=VARCHAR}, #{mobileNo,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{thumbnailUrl,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{kakao,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{modifiedAt,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.buza.agency.entity.BtAdminAccount">
    insert into bt_admin_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seq != null">
        seq,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="mobileNo != null">
        mobile_no,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="thumbnailUrl != null">
        thumbnail_url,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="kakao != null">
        kakao,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="modifiedAt != null">
        modified_at,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seq != null">
        #{seq,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="mobileNo != null">
        #{mobileNo,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="thumbnailUrl != null">
        #{thumbnailUrl,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="kakao != null">
        #{kakao,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedAt != null">
        #{modifiedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.buza.agency.entity.BtAdminAccount">
    update bt_admin_account
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="mobileNo != null">
        mobile_no = #{mobileNo,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="thumbnailUrl != null">
        thumbnail_url = #{thumbnailUrl,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="kakao != null">
        kakao = #{kakao,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedAt != null">
        modified_at = #{modifiedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where seq = #{seq,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.buza.agency.entity.BtAdminAccount">
    update bt_admin_account
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      mobile_no = #{mobileNo,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      thumbnail_url = #{thumbnailUrl,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      kakao = #{kakao,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      modified_at = #{modifiedAt,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=VARCHAR}
    where seq = #{seq,jdbcType=BIGINT}
  </update>
</mapper>